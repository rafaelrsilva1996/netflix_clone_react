[{"/home/dell/Projects/React/netflixclone/src/index.js":"1","/home/dell/Projects/React/netflixclone/src/App.js":"2","/home/dell/Projects/React/netflixclone/src/Tmdb.js":"3","/home/dell/Projects/React/netflixclone/src/components/MovieRow.js":"4","/home/dell/Projects/React/netflixclone/src/components/FeaturedMovie.js":"5","/home/dell/Projects/React/netflixclone/src/components/Header.js":"6"},{"size":197,"mtime":1611840693794,"results":"7","hashOfConfig":"8"},{"size":2078,"mtime":1611881242242,"results":"9","hashOfConfig":"8"},{"size":2532,"mtime":1611851942166,"results":"10","hashOfConfig":"8"},{"size":1736,"mtime":1611880352858,"results":"11","hashOfConfig":"8"},{"size":1761,"mtime":1611882170857,"results":"12","hashOfConfig":"8"},{"size":660,"mtime":1611858497004,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"203ah6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/home/dell/Projects/React/netflixclone/src/index.js",[],["30","31"],"/home/dell/Projects/React/netflixclone/src/App.js",["32"],"/home/dell/Projects/React/netflixclone/src/Tmdb.js",["33"],"const API_KEY = 'b149a1ce837eaf7fb0e9973bfae34e03';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`);\n    const json = await req.json();\n    return json;\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Originais Netflix',\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Recomendados para Você',\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'topretade',\n                title: 'Em Alta',\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Ação',\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comédia',\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Terror',\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentário',\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n            },\n        ]\n    },\n    getMovieInfo: async (movieId, type) => {\n        let info = {};\n\n        if(movieId) {\n            switch(type) {\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                default:\n                    info = null;\n                break;\n            }\n        }\n\n        return info;\n    }\n}","/home/dell/Projects/React/netflixclone/src/components/MovieRow.js",["34"],"import React, { useState } from 'react';\nimport './MovieRow.css';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default ({title, items}) => {\n    const [scrollX, setScrollX] = useState(-400);\n\n    const handleLeftArrow = () => {\n        let x = scrollX + Math.round(window.innerWidth / 2);\n        if(x > 0) {\n            x = 0;\n        }\n        setScrollX(x);\n    }\n\n    const handleRightArrow = () => {\n        let x = scrollX - Math.round(window.innerWidth / 2);\n        let listW = items.results.length * 150;\n        if((window.innerWidth - listW) > x) {\n            x = (window.innerWidth - listW) - 60;\n        }\n        setScrollX(x);\n    }\n\n    return (\n        <div className=\"movieRow\">\n            <h2>{title}</h2>\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n                <NavigateBeforeIcon style={{fontSize: 50}} />\n            </div>\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\n                <NavigateNextIcon style={{fontSize: 50}} />\n            </div>\n            <div className=\"movieRow--listarea\">\n                <div className=\"movieRow--list\" style={{\n                    marginLeft: scrollX,\n                    width: items.results.length * 150\n                }}>\n                    {items.results.length > 0 && items.results.map((item, key)=>(\n                        <div key={key} className=\"movieRow--item\">\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","/home/dell/Projects/React/netflixclone/src/components/FeaturedMovie.js",["35"],"/home/dell/Projects/React/netflixclone/src/components/Header.js",["36"],"import React from 'react';\nimport './Header.css';\n\nexport default ({black}) => {\n    return (\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">\n                <a href=\"/\">\n                    <img src=\"https://theme.zdassets.com/theme_assets/830444/b5e197fff076818dbb2e720df677cb40cbf05677.png\" alt=\"Netflix\" />\n                </a>\n            </div>\n            <div className=\"header--user\">\n                <a href=\"/\">\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Usuário\" />\n                </a>\n            </div>\n        </header>\n    )\n}",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":8,"column":1,"nodeType":"43","endLine":75,"endColumn":2},{"ruleId":"41","severity":1,"message":"44","line":10,"column":1,"nodeType":"43","endLine":74,"endColumn":2},{"ruleId":"41","severity":1,"message":"42","line":6,"column":1,"nodeType":"43","endLine":49,"endColumn":2},{"ruleId":"41","severity":1,"message":"42","line":4,"column":1,"nodeType":"43","endLine":41,"endColumn":2},{"ruleId":"41","severity":1,"message":"42","line":4,"column":1,"nodeType":"43","endLine":19,"endColumn":2},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]